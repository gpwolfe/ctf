%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Apr 18 14:53:37 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUCAGUUUUUUACUCUUCCACUCUCUUUUCUAUAUUUUGCCCAUCGGGGCUGCGGAUACCUGGUUUUAUUAUUUUUUCUUUGCCCAACGGGGCCGUGGAUACCUGCCUUUUAAUUCUUUUUUAUUCGCCCAUCGGGGCCGCGGAUACCUGCUUUUUAUUUUUUUUUCCUUAGCCCAUCGGGGUAUCGGAUACCUGCUGAUUCCCUUCCCCUCUGAACCCCCAACACUCUGGCCCAUCGGGGUGACGGAUAUCU\
G\
) } def
/len { sequence length } bind def

/coor [
[18.39062309 415.87847900]
[14.40512085 430.33932495]
[10.41961861 444.80017090]
[17.96450233 458.42779541]
[13.71663570 473.03637695]
[0.67826957 480.14529419]
[-3.30723286 494.60610962]
[-7.29273510 509.06695557]
[-0.65269411 523.67138672]
[-8.05901337 537.90252686]
[-23.83019829 540.84350586]
[-35.86794662 530.23822021]
[-34.93792725 514.22216797]
[-21.75357056 505.08145142]
[-17.76806831 490.62060547]
[-13.78256607 476.15979004]
[-21.33811188 463.37506104]
[-17.50224686 448.65292358]
[-4.04121733 440.81466675]
[-0.05571511 426.35382080]
[3.92978716 411.89300537]
[-7.22373962 406.47439575]
[-17.32151604 399.27133179]
[-26.08061790 390.48413086]
[-33.25539398 380.35763550]
[-38.64434814 369.17413330]
[-42.09579468 357.24578857]
[-43.51214600 344.90563965]
[-42.85264587 332.49847412]
[-40.13455963 320.37112427]
[-35.43271637 308.86285400]
[-28.87745667 298.29577637]
[-20.65100670 288.96585083]
[-10.98242855 281.13461304]
[-0.14122775 275.02188110]
[11.57014847 270.79953003]
[23.82475281 268.58666992]
[36.28026962 268.44631958]
[48.58856583 270.38357544]
[53.62302780 256.25366211]
[58.65748978 242.12376404]
[63.69194794 227.99386597]
[68.72640991 213.86395264]
[73.76087189 199.73405457]
[71.63706207 194.07891846]
[72.78110504 187.41198730]
[77.57323456 181.65341187]
[78.67241669 166.69374084]
[79.77160645 151.73406982]
[80.87078857 136.77439880]
[81.96997070 121.81472778]
[82.21192169 93.45833588]
[72.17042542 82.31525421]
[62.12892532 71.17217255]
[52.08742523 60.02909088]
[42.04592133 48.88600922]
[32.00442123 37.74292755]
[21.16432571 37.80953979]
[12.25189304 32.03232574]
[8.06388760 22.51077080]
[9.75602055 12.46965122]
[-0.01007842 1.08442724]
[-9.77617741 -10.30079651]
[-19.54227638 -21.68601990]
[-29.30837440 -33.07124329]
[-39.07447433 -44.45646667]
[-32.85821533 -30.80516243]
[-31.28276253 -15.88812637]
[-34.51013565 -1.23943841]
[-42.20842743 11.63442230]
[-53.58594513 21.40949821]
[-67.47261047 27.08051682]
[-82.44031525 28.06426620]
[-96.94977570 24.25957489]
[-109.50881958 16.05772400]
[-118.82587433 4.30219221]
[-123.94276428 -9.79807186]
[-124.33326721 -24.79298782]
[-119.95722198 -39.14046860]
[-111.26466370 -51.36501312]
[-99.14954376 -60.20943832]
[-84.85778809 -64.76418304]
[-69.85916901 -64.56082916]
[-55.69672394 -59.62059784]
[-67.92823792 -68.30333710]
[-80.15975952 -76.98607635]
[-92.39127350 -85.66881561]
[-108.76020813 -86.66391754]
[-115.83978271 -101.45619965]
[-106.34714508 -114.82862854]
[-90.04750824 -113.02480316]
[-83.70853424 -97.90033722]
[-71.47702026 -89.21759796]
[-59.24549866 -80.53485107]
[-47.01398087 -71.85211182]
[-35.16450882 -81.05048370]
[-23.31607628 -90.24801636]
[-28.69444847 -104.25062561]
[-34.07282257 -118.25324249]
[-39.45119476 -132.25584412]
[-44.82956696 -146.25846863]
[-50.20793915 -160.26107788]
[-55.58631134 -174.26368713]
[-70.64102936 -173.02586365]
[-85.43437195 -176.08094788]
[-98.76712799 -183.18124390]
[-109.55845642 -193.75120544]
[-116.93355560 -206.93394470]
[-120.29456329 -221.66079712]
[-119.36901093 -236.73793030]
[-114.23193359 -250.94311523]
[-105.29976654 -263.12478638]
[-93.29660797 -272.29544067]
[-79.19549561 -277.71163940]
[-64.13954163 -278.93432617]
[-49.34926987 -275.86441040]
[-36.02365875 -268.75070190]
[-25.24295425 -258.16992188]
[-17.88110161 -244.97976685]
[-14.53489208 -230.24954224]
[-15.47558975 -215.17335510]
[-20.62693596 -200.97334290]
[-29.57133293 -188.80064392]
[-41.58369827 -179.64205933]
[-36.20532608 -165.63945007]
[-30.82695389 -151.63684082]
[-25.44858170 -137.63421631]
[-20.07020950 -123.63161469]
[-14.69183826 -109.62899780]
[-9.31346607 -95.62638855]
[-8.37196732 -75.71728516]
[-15.92655849 -60.96741104]
[-27.68924904 -54.22256470]
[-17.92315102 -42.83734131]
[-8.15705204 -31.45211792]
[1.60904682 -20.06689453]
[11.37514496 -8.68167114]
[21.14124298 2.70355248]
[39.81043243 7.80198765]
[43.14750290 27.70142746]
[53.18900681 38.84450912]
[63.23050690 49.98759079]
[73.27200317 61.13067245]
[83.31350708 72.27375031]
[93.35500336 83.41683197]
[89.88504028 68.82370758]
[86.41506958 54.23058319]
[76.70541382 42.79718781]
[69.12653351 29.85266876]
[63.90826797 15.78960609]
[61.20888519 1.03449428]
[61.11024475 -13.96518135]
[63.61533737 -28.75451851]
[68.64819336 -42.88499451]
[76.05617523 -55.92807007]
[85.61462402 -67.48817444]
[97.03364563 -77.21472931]
[109.96694183 -84.81275177]
[124.02227783 -90.05180359]
[138.77337646 -92.77300262]
[153.77288818 -92.89382935]
[168.56591797 -90.41060638]
[182.70382690 -85.39865875]
[195.75784302 -78.00997162]
[207.33206177 -68.46862793]
[217.07550049 -57.06399918]
[224.69264221 -44.14195633]
[229.95246887 -30.09438896]
[232.69548035 -15.34732533]
[232.83848572 -0.34800693]
[230.37715149 14.44867516]
[225.38610840 28.59397507]
[218.01673889 41.65890503]
[208.49252319 53.24723053]
[197.10231018 63.00751877]
[184.19154358 70.64375305]
[170.15177917 75.92435455]
[155.40878296 78.68917847]
[140.41368103 78.85466766]
[127.12030029 85.80348206]
[113.82691956 92.75229645]
[128.82440186 93.02732849]
[143.82186890 93.30235291]
[158.81935120 93.57737732]
[167.42778015 90.61264038]
[173.99816895 93.94854736]
[188.99116516 94.40688324]
[203.98416138 94.86521149]
[218.97715759 95.32354736]
[233.97015381 95.78187561]
[244.24745178 83.99581909]
[259.70419312 81.62438202]
[273.04214478 89.78727722]
[277.96356201 104.63024902]
[272.14468384 119.14488983]
[258.33300781 126.47782898]
[243.05001831 123.16668701]
[233.51182556 110.77487183]
[218.51882935 110.31654358]
[203.52583313 109.85820770]
[188.53283691 109.39987946]
[173.53984070 108.94154358]
[158.54432678 108.57485962]
[143.54684448 108.29983521]
[128.54936218 108.02480316]
[113.55188751 107.74977875]
[127.76338196 112.54909515]
[133.80531311 126.27845001]
[127.74404907 139.99928284]
[113.52580261 144.77856445]
[100.40744019 137.50474548]
[96.92964172 122.91390991]
[95.83045959 137.87358093]
[94.73127747 152.83325195]
[93.63209534 167.79292297]
[92.53291321 182.75259399]
[99.78562164 169.62254333]
[109.91905975 158.56300354]
[122.36639404 150.19259644]
[136.43138123 144.97952271]
[151.32728577 143.21537781]
[166.22088623 144.99884033]
[180.27908325 150.23016357]
[192.71556091 158.61671448]
[202.83464050 169.68940735]
[210.07029724 182.82884216]
[214.01783752 197.30009460]
[214.45642090 212.29368591]
[211.36152649 226.97093201]
[204.90626526 240.51084900]
[195.45170593 252.15609741]
[183.52673340 261.25524902]
[169.79833984 267.29937744]
[155.03445435 269.95034790]
[140.06091309 269.05993652]
[125.71524811 264.67791748]
[112.79991913 257.04940796]
[102.03735352 246.60108948]
[94.02954865 233.91743469]
[89.22444916 219.70790100]
[87.89077759 204.76850891]
[82.85631561 218.89842224]
[77.82185364 233.02832031]
[72.78739166 247.15823364]
[67.75292969 261.28814697]
[62.71847153 275.41802979]
[77.72295380 284.91418457]
[90.04964447 297.68515015]
[99.00122833 313.00332642]
[104.07253265 329.99725342]
[104.97902679 347.70101929]
[101.67279053 365.10928345]
[94.34503937 381.23431396]
[83.41504669 395.16207886]
[69.50619507 406.10394287]
[53.41037750 413.44149780]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 21]
[2 20]
[3 19]
[6 16]
[7 15]
[8 14]
[39 246]
[40 245]
[41 244]
[42 243]
[43 242]
[44 241]
[47 216]
[48 215]
[49 214]
[50 213]
[51 212]
[52 145]
[53 144]
[54 143]
[55 142]
[56 141]
[57 140]
[61 138]
[62 137]
[63 136]
[64 135]
[65 134]
[66 133]
[84 95]
[85 94]
[86 93]
[87 92]
[97 130]
[98 129]
[99 128]
[100 127]
[101 126]
[102 125]
[103 124]
[181 206]
[182 205]
[183 204]
[184 203]
[186 202]
[187 201]
[188 200]
[189 199]
[190 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
